#!/usr/bin/env python

# Copyright 2007, Michael J. Harms
# This program is distributed under General Public License v. 3.  See the file
# COPYING for a copy of the license.

__description__ = \
"""
pdb_centermass.py

Calculates the center of mass of a protein (assuming all atoms have equal mass).
Returns either the center or the recentered coordinates of the pdb (if coord
command line option is specified).
"""

__author__ = "Michael J. Harms"
__date__ = "061109"

import os, shutil, sys
from pdbtools.helper import cmdline
from pdbtools import centermass

def main():
    """
    If called from command line...
    """
    # Parse command line
    cmdline.initializeParser(__description__,__date__)
    cmdline.addOption(short_flag="c",
                      long_flag="coord",
                      action="store_true",
                      default=False,
                      help="write out re-centered coordinates")
    cmdline.addOption(short_flag="m",
                      long_flag="mass",
                      action="store_false",
                      default=True,
                      help="weight atoms by their mass")
    cmdline.addOption(short_flag="a",
                      long_flag="hetatm",
                      action="store_true",
                      default=False,
                      help="include hetatms in center of mass calc")


    file_list, options = cmdline.parseCommandLine()

    for pdb_file in file_list:

        # Load in pdb file
        f = open(pdb_file,'r')
        pdb = f.readlines()
        f.close()

        center, pdb_out = centermass.pdbCentermass(pdb,options.coord,options.hetatm,
                                        options.mass)
        print("%s %s" % (pdb_file,"".join(center)))

        # If the user wants re-centered coordinates, write them out
        if options.coord:
            out_file = "%s_center.pdb" % pdb_file[:-4]
            g = open(out_file,'w')
            g.writelines(pdb_out)
            g.close()


# If called from command line:
if __name__ == "__main__":
    main()
